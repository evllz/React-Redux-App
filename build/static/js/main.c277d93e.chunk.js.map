{"version":3,"sources":["actions/index.js","reducer/index.js","components/Search.js","components/ListOfCards.js","App.js","index.js"],"names":["LOADING","LOAD_SUCCESS","LOAD_FAIL","initialState","cards","isFetching","err","reducer","state","action","console","log","type","payload","toString","connect","loadData","id","dispatch","axios","get","then","res","data","catch","props","useState","setId","Container","Box","Typography","variant","href","TextField","label","name","value","onChange","e","target","style","margin","Button","onClick","preventDefault","map","card","src","imageUrl","multiverseid","App","className","store","createStore","rootReducer","applyMiddleware","thunk","rootElement","document","getElementById","ReactDOM","render"],"mappings":"kMAEaA,EAAU,UACVC,EAAe,eACfC,EAAY,YCFnBC,EAAe,CACnBC,MAAO,GACPC,YAAY,EACZC,IAAK,IA6BQC,EA1BC,WAAmC,IAAlCC,EAAiC,uDAAzBL,EAAcM,EAAW,uCAEhD,OADAC,QAAQC,IAAIH,EAAMJ,OACVK,EAAOG,MACb,KAAKZ,EACH,OAAO,2BACFQ,GADL,IAEEH,YAAY,IAEhB,KAAKJ,EACH,OAAO,2BACFO,GADL,IAEEF,IAAK,GACLF,MAAOK,EAAOI,QACdR,YAAY,IAEhB,KAAKH,EACH,OAAO,2BACFM,GADL,IAEEF,IAAKG,EAAOI,QAAQC,WACpBT,YAAY,IAEhB,QACE,OAAOG,I,qEC2BEO,eAPS,SAACP,GACvB,MAAO,CACLJ,MAAOI,EAAMJ,MACbC,WAAYG,EAAMH,cAIkB,CAAEW,SFnDlB,SAACC,GAAD,OAAQ,SAACC,GAC/BA,EAAS,CAAEN,KAAMZ,IACjBmB,IACGC,IADH,mDACmDH,EADnD,aAEGI,MAAK,SAACC,GACLJ,EAAS,CAAEN,KAAMX,EAAcY,QAASS,EAAIC,KAAKnB,WAElDoB,OAAM,SAAClB,GACNY,EAAS,CAAEN,KAAMV,EAAWW,QAASP,UE2C5BS,EA9CA,SAACU,GAAW,IAAD,EACJC,mBAAS,IADL,mBACjBT,EADiB,KACbU,EADa,KASxB,OACE,eAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,8CACA,cAACD,EAAA,EAAD,CAAYC,QAAQ,QAApB,6FAIA,eAACD,EAAA,EAAD,CAAYC,QAAQ,QAApB,2EACiE,IAC/D,mBAAGC,KAAK,kEAAR,qBAIF,cAACC,EAAA,EAAD,CACEC,MAAM,SACNC,KAAK,KACLC,MAAOnB,EACPoB,SAzBa,SAACC,GACpBX,EAAMW,EAAEC,OAAOH,aA2Bb,cAACP,EAAA,EAAD,CAAKW,MAAO,CAAEC,OAAQ,OAAtB,SACE,cAACC,EAAA,EAAD,CAAQX,QAAQ,YAAYY,QA1Bd,SAACL,GACnBA,EAAEM,iBACFnB,EAAMT,SAASC,IAwBX,4BCROF,eAPS,SAACP,GACvB,MAAO,CACLJ,MAAOI,EAAMJ,MACbC,WAAYG,EAAMH,WAClBC,IAAKE,EAAMF,OAGAS,EA9BK,SAACU,GACnB,OACE,8BACGA,EAAMpB,WACL,2CACEoB,EAAMnB,IACR,4BAAImB,EAAMnB,MAEV,cAACsB,EAAA,EAAD,UACGH,EAAMrB,MAAMyC,KAAI,SAACC,GAChB,OACE,qBAEEC,IAAKD,EAAKE,SACVR,MAAO,CAAEC,OAAQ,QAFZK,EAAKG,wBCXX,SAASC,IACtB,OACE,sBAAKC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,OCAN,IAAMC,EAAQC,YAAYC,EAAaC,YAAgBC,MAEjDC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,IAAD,CAAUT,MAAOA,EAAjB,SACE,cAACF,EAAD,MAEFO,K","file":"static/js/main.c277d93e.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const LOADING = \"LOADING\";\r\nexport const LOAD_SUCCESS = \"LOAD_SUCCESS\";\r\nexport const LOAD_FAIL = \"LOAD_FAIL\";\r\n\r\nexport const loadData = (id) => (dispatch) => {\r\n  dispatch({ type: LOADING });\r\n  axios\r\n    .get(`https://api.magicthegathering.io/v1/sets/${id}/booster`)\r\n    .then((res) => {\r\n      dispatch({ type: LOAD_SUCCESS, payload: res.data.cards });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({ type: LOAD_FAIL, payload: err });\r\n    });\r\n};\r\n","import { LOADING, LOAD_SUCCESS, LOAD_FAIL } from \"../actions/index\";\r\n\r\nconst initialState = {\r\n  cards: [],\r\n  isFetching: false,\r\n  err: \"\",\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  console.log(state.cards);\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n      };\r\n    case LOAD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        err: \"\",\r\n        cards: action.payload,\r\n        isFetching: false,\r\n      };\r\n    case LOAD_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload.toString(),\r\n        isFetching: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { loadData } from \"../actions/index\";\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Box,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nconst Search = (props) => {\r\n  const [id, setId] = useState(\"\");\r\n  const handleChange = (e) => {\r\n    setId(e.target.value);\r\n  };\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    props.loadData(id);\r\n  };\r\n  return (\r\n    <Container>\r\n      <Box>\r\n        <Typography variant=\"h4\">Welcome to MTG Booster Simulator</Typography>\r\n        <Typography variant=\"body1\">\r\n          Try pulling a booster for a specific set, i.e. 'Khans of Tarkir' would\r\n          be 'KTK'\r\n        </Typography>\r\n        <Typography variant=\"body1\">\r\n          Core sets don't work, for a full list of expansion codes click{\" \"}\r\n          <a href=\"https://en.wikipedia.org/wiki/List_of_Magic:_The_Gathering_sets\">\r\n            here\r\n          </a>\r\n        </Typography>\r\n        <TextField\r\n          label=\"Search\"\r\n          name=\"id\"\r\n          value={id}\r\n          onChange={handleChange}\r\n        />\r\n      </Box>\r\n      <Box style={{ margin: \"5px\" }}>\r\n        <Button variant=\"contained\" onClick={handleClick}>\r\n          Search\r\n        </Button>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    cards: state.cards,\r\n    isFetching: state.isFetching,\r\n  };\r\n};\r\n\r\nexport default connect(mapStatetoProps, { loadData })(Search);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Container } from \"@material-ui/core\";\r\n\r\nconst ListOfCards = (props) => {\r\n  return (\r\n    <div>\r\n      {props.isFetching ? (\r\n        <p>Loading...</p>\r\n      ) : props.err ? (\r\n        <p>{props.err}</p>\r\n      ) : (\r\n        <Container>\r\n          {props.cards.map((card) => {\r\n            return (\r\n              <img\r\n                key={card.multiverseid}\r\n                src={card.imageUrl}\r\n                style={{ margin: \"5px\" }}\r\n              />\r\n            );\r\n          })}\r\n        </Container>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    cards: state.cards,\r\n    isFetching: state.isFetching,\r\n    err: state.err,\r\n  };\r\n};\r\nexport default connect(mapStatetoProps)(ListOfCards);\r\n","import React from \"react\";\nimport \"./styles.css\";\nimport Search from \"./components/Search\";\nimport ListOfCards from \"./components/ListOfCards\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Search />\n      <ListOfCards />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./reducer/index\";\nimport thunk from \"redux-thunk\";\nimport App from \"./App\";\nimport \"./styles.css\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement\n);\n"],"sourceRoot":""}